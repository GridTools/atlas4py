name: Build and deploy wheel

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        python: ["cp310", "cp311", "cp312"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build binary wheels
        uses: pypa/cibuildwheel@v2.19
        with:
          output-dir: dist
        env:
          # Python version settings
          CIBW_BUILD: ${{matrix.python}}-*
          CIBW_SKIP: pp* *musllinux*
          # Linux archs (Intel runner with qemu installed, build Intel and ARM wheels)
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          # MacOS archs (arm64 wheels cannot be tested)
          #CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
          CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
          CIBW_TEST_SKIP: "*-macosx_arm64 *-macosx_universal2:arm64"
          MACOSX_DEPLOYMENT_TARGET: "14.5"
          # General
          CIBW_TEST_REQUIRES: -r requirements-dev.txt
          CIBW_TEST_COMMAND: pytest -v {project}/tests
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{matrix.python}}-${{ matrix.os }}
          path: ./dist/*.whl

  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
      - uses: actions/checkout@v4
      - name: Install requirements
        run: python -m pip install -r requirements-dev.txt
      - name: Make sdist
        run:  python setup.py sdist
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*.tar.gz

  upload-testpypi:
    name: Upload wheels to TestPyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: Publish to test.pypi.org
        if: ${{ github.event_name == 'push' }}
        uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_DEPLOY_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
