name: Build and deploy wheel

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_x86_64_wheels:
    name: Build x86_64 wheels on ${{ matrix.os }} for ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-13
          - ubuntu-24.04-arm
        python: ["cp39", "cp310", "cp311", "cp312"]
    steps:
      - uses: actions/checkout@v4
      - name: Build binary wheels
        uses: pypa/cibuildwheel@v2.19
        with:
          output-dir: dist
        env:
          # Wheel version settings
          CIBW_BUILD: ${{matrix.python}}-*
          CIBW_SKIP: pp* *musllinux*
          # Linux archs
          CIBW_ARCHS_LINUX: ${{ fromJSON('["x86_64", "aarch64"]')[matrix.os == 'ubuntu-24.04-arm'] }} # poor man ternary https://github.com/orgs/community/discussions/25725#discussioncomment-3248924
          # MacOS archs
          CIBW_ARCHS_MACOS: "x86_64"
          MACOSX_DEPLOYMENT_TARGET: "13.0"
          # General
          CIBW_TEST_REQUIRES: -r requirements-dev.txt
          CIBW_TEST_COMMAND: pytest -v {project}/tests
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{matrix.python}}-${{ matrix.os }}
          path: ./dist/*.whl

  build_arm64_wheels:
    name: Build arm64 wheels on ${{ matrix.os }} for ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
        python: ["cp39", "cp310", "cp311", "cp312"]
    steps:
      - uses: actions/checkout@v4
      - name: Build binary wheels
        uses: pypa/cibuildwheel@v2.19
        with:
          output-dir: dist
        env:
          # Wheel version settings
          CIBW_BUILD: ${{matrix.python}}-*
          CIBW_SKIP: pp* *musllinux*
          # MacOS archs
          CIBW_ARCHS_MACOS: "arm64"
          MACOSX_DEPLOYMENT_TARGET: "14.0"
          # General
          CIBW_TEST_REQUIRES: -r requirements-dev.txt
          CIBW_TEST_COMMAND: pytest -v {project}/tests
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{matrix.python}}-${{ matrix.os }}-arm64
          path: ./dist/*.whl

  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
      - uses: actions/checkout@v4
      - name: Install requirements
        run: python -m pip install -r requirements-dev.txt
      - name: Make sdist
        run:  python setup.py sdist
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*.tar.gz

  upload-testpypi:
    name: Upload wheels to TestPyPI
    needs: [build_x86_64_wheels, build_arm64_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: Publish to test.pypi.org
        if: ${{ github.event_name == 'push' }}
        uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_DEPLOY_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
